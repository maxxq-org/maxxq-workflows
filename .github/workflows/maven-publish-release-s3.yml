name: Deploy snapshot to github packages 

# Run workflow when the workflow to check the quality is completed
on:
 workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      java-distribution:
        required: true
        type: string
        default: 'temurin'
    secrets:
      gpg_private_key:
        required: true
      gpg_passphrase:
        required: true
      MAVEN_S3_USER:
        required: true
      MAVEN_S3_PASSWORD:
        required: true 
   

jobs:
  printJob:    
    name: Print event
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version:  ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          cache: 'maven'
          gpg-private-key: ${{ secrets.gpg_private_key }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{"id":"awss3_snapshots","name":"AWS S3 Snapshots","url":"s3://repository.maven/snapshots","releases":{"enabled":"false"},"snapshots":{"enabled":"true"}},{"id":"awss3_releases","name":"AWS S3 Releases","url":"s3://repository.maven/releases","releases":{"enabled":"true"},"snapshots":{"enabled":"false"}}]'
          servers: '[{ "id": "awss3_snapshots", "username": "${env.MAVEN_S3_USER}", "password": "${env.MAVEN_S3_PASSWORD}" }, { "id": "awss3_releases", "username": "${env.MAVEN_S3_USER}", "password": "${env.MAVEN_S3_PASSWORD}" }]'
          output_file: .m2/settings.xml
      - name: print settings.xml
        run: cat .m2/settings.xml
      - name: Publish package
        run: mvn --batch-mode deploy -DaltDeploymentRepository=github::default::s3://repository.maven/releases  --settings .m2/settings.xml
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
          MAVEN_S3_USER: ${{ secrets.MAVEN_S3_USER }}
          MAVEN_S3_PASSWORD: ${{ secrets.MAVEN_S3_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MAVEN_S3_USER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MAVEN_S3_PASSWORD }}
      - name: Get version from pom.xml
        id: get-version
        uses: JActions/maven-version@v1.2.0
        env:
          MAVEN_S3_USER: ${{ secrets.MAVEN_S3_USER }}
          MAVEN_S3_PASSWORD: ${{ secrets.MAVEN_S3_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MAVEN_S3_USER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MAVEN_S3_PASSWORD }}
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ steps.get-version.outputs.version }}
          message: Release version for ${{ steps.get-version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
      