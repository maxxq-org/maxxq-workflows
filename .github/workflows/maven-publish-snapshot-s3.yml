name: Deploy snapshot to github packages 

# Run workflow when the workflow to check the quality is completed
on:
 workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      java-distribution:
        required: true
        type: string
        default: 'temurin'
      maven-deployment-repo:
        required: true
        type: string
    secrets:
      gpg_private_key:
        required: true
      gpg_passphrase:
        required: true
      MAVEN_S3_USER:
        required: true
      MAVEN_S3_PASSWORD:
        required: true 
   

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v3
        with:
          java-version:  ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          gpg-private-key: ${{ secrets.gpg_private_key }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - uses: whelk-io/maven-settings-xml-action@v20
        with:
          repositories: '[{"id":"awss3_snapshots","name":"AWS S3 Snapshots","url":"s3://repository.maven/snapshots","releases":{"enabled":"false"},"snapshots":{"enabled":"true"}}]'
          servers: '[{ "id": "awss3_snapshots", "username": "${env.MAVEN_S3_USER}", "password": "${env.MAVEN_S3_PASSWORD}" }]'
          output_file: .m2/settings.xml
      - name: print settings.xml
        run: cat .m2/settings.xml
      - name: Write extensions.xml File
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: .m2/extensions.xml
          write-mode: overwrite
          contents: <extensions xmlns="http://maven.apache.org/EXTENSIONS/1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/EXTENSIONS/1.0.0 http://maven.apache.org/xsd/core-extensions-1.0.0.xsd"><extension><groupId>com.github.seahen</groupId><artifactId>maven-s3-wagon</artifactId><version>1.3.3</version></extension></extensions>
      - name: Publish package
        run: mvn --batch-mode deploy -DaltDeploymentRepository=github::default::${{ inputs.maven-deployment-repo }}  --settings .m2/settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.gpg_passphrase }}
          MAVEN_S3_USER: ${{ secrets.MAVEN_S3_USER }}
          MAVEN_S3_PASSWORD: ${{ secrets.MAVEN_S3_PASSWORD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.MAVEN_S3_USER }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.MAVEN_S3_PASSWORD }}
